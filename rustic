#!/usr/bin/env python3

import os
import re
import readline
import subprocess
import sys

exe_name = '.rustic.scratch'
file_name = exe_name + '.rs'
valid_head = default_head = 'use std;\n'
valid_body = default_body = 'fn main(_args: [str]) {\n'

print(subprocess.check_output(('rustc', '-v')).decode('u8'))
print('Tips: blank line to eval, ^D to clear environment, ?expr to log expr, ^C to quit')
try:
    while True:
        print('Input:')
        new_head = new_body = transient = ''
        persist_transient = False

        while True:  # Breaks on blank lines and EOF
            try:
                line = input()
            except EOFError:
                valid_head = default_head
                valid_body = default_body
                print('\nEnvironment reset\n')
                break

            if line == '?':
                persist_transient = True
            elif re.match('\?.', line) is not None:
                transient += 'log(error, ' + line[1:] + ');\n'
            elif persist_transient:
                transient += line + '\n'
            elif re.match('use ', line) is not None:
                new_head += line + '\n'
            else:
                new_body += line + '\n'

            if line == '':
                with open(file_name, 'w') as f:
                    f.write(valid_head + new_head + valid_body + new_body + transient + '}')
                try:  # To compile the file
                    subprocess.check_output(('rustc', file_name)).decode('u8')
                    try:  # To run the file
                        output = subprocess.check_output(('./' + exe_name)).decode('u8')
                        if output != '': print('Output:\n' + output)
                        valid_head += new_head
                        valid_body += new_body[:-1]
                    except subprocess.CalledProcessError as e:
                        print('Runtime error:\n' + e.output.decode('u8'))
                except subprocess.CalledProcessError as e:
                    print('Compiler error:\n' + e.output.decode('u8'))
                break

except KeyboardInterrupt:
    prompt = input('\nDelete scratch files? [y]/n: ')
    if prompt.lower() == 'n':
        sys.exit(0)
    else:
        if os.path.exists(file_name): os.remove(file_name)
        if os.path.exists(exe_name): os.remove(exe_name)
        sys.exit(0)
